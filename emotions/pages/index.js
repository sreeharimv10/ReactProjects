import Head from 'next/head'
import Image from 'next/image'
import isPropValid from '@emotion/is-prop-valid'
import styles from '../styles/Home.module.css'
import styled from '@emotion/styled'
import { css, jsx } from '@emotion/react'


export default function Home()
{
  //Hover color change____
  const color = 'white' //
  //Hover color change_//

  //Styling a text____________________________________________
  const Basic = ({ className }) =>                          //
  (                                                        //
    <div className={className}>Sample Styled Text</div>   //
  )                                                      //
        /****************************************/      //
  const Fancy = styled(Basic)`color: hotpink;`         //
  //Styling a Text____________________________________//


  //Button Styling_____________________________
  const Button1 = styled.button`color: grey;`//
  //Button Styling__________________________//


  // Button Style Changing based on Props______________________________
  const Button2 = styled.button`                                     //
  color: ${props => props.primary ? 'black' : 'royalblue'};`        //
        /***************************************************/      //
  const Container = styled.div(props => (                         //
  {                                                              //
    display: 'flex', flexDirection: props.column && 'column'    //
  }))                                                          //
  // Button Style Changing based on Props_____________________//


  //Styling a Button & change button text color by hovering_
  const Button3 = styled.button`                          //
          padding: 10px;                                 //
          background-color: hotpink;                    //
          font-size: 24px;                             //
          border-radius: 50px;                        //
          color: black;                              //
          font-weight: bold;                        //
          &:hover                                  //
          {                                       //
            color: white;                        //
          }`                                    //
  //Styling a Button & etc..___________________//


  //Using multiple components with 1 Style_________________________________________
  const Section = styled.section`                                                //
    background: #333;                                                           //
    color: #fff;`                                                              //
                                                                              //
  //this component(Aside) has same styles as Section but it renders as aside //
  const Aside = Section.withComponent('aside')                              //
  //Using multiple components with 1 Style_________________________________//


  //Object Styling__________________________
  const H1 = styled.h1(                   //
    {                                    //
      fontSize: 20                      //
    },                                 //
    props => ({ color: props.color }))//
  //Object Styling___________________//


  //shouldForwardProp__________________________________________________
  const H11 = styled('h1',                                             //
  {                                                                   //
    shouldForwardProp: prop => isPropValid(prop) && prop !== 'color' //
  })                                                                //
  (props => ({color: 'hotpink'}))                                  //
  //shouldForwardProp_____________________________________________//


  //Button with 'as prop'________________________________
  const Button4 = styled.button`                       //
    padding: 10px;                                    //
    background-color: hotpink;                       //
    color: rebeccapurple;                           //
    border-radius: 50px;                           //
    font-family: 'Times New Roman', Times, serif;`//
  //Button with 'as prop'________________________//


  //Nested Component____________________
  const Example = styled('span')`     //
    color: lightgreen;               //
    font-weight: bold;              //
    & > a                          //
    {                             //
      color: hotpink;            //
      font-size: 24px;          //
    }`                         //
  //Nested Component__________//

  //Styling for Composition part______
 //const base = css`color: hotpink;` //
//Styling for Composition part___//

  const danger = css`
  color: red;
`

const base = css`
  background-color: darkgreen;
  color: turquoise;
`



  return (
    <div className={styles.container}>
      <Head>
        <title>Emotion App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>


      <Fancy/>
      <br/>


      <div
          className=
          {
            css`
                padding: 5px;
                background-color: hotpink;
                font-size: 24px;
                border-radius: 50px;
                font-style: italic;
                font-weight: bold;
                &:hover
                {
                  color: ${color};
                }`
          }>
          Hover to change color
      </div>
      <br/>

      <Button1>NORMAL BUTTON</Button1>
      <br/>

      <Section>This is a section</Section>
      <Aside>This is an aside</Aside>
      <br/>

      <Button3>Hover to change color</Button3>
      <br/>

      <H1 color="lightgreen">This is lightgreen</H1>
      <br/>

      <H11 color="lightgreen">This is lightgreen</H11>
      <br/>

      <Container column>
        <Button2>REGULAR BUTTON PROP</Button2>
        <br/>

        <Button2 primary>PRIMARY BUTTON PROP</Button2>
      </Container>

      <br/>
      <Button4
        as="a"
        href="https://github.com/emotion-js/emotion">Emotion on GitHub</Button4>

      <br/>
      <Example>This is <a>nested</a>. </Example>

      <br/>
      <div>
    <div css={base}>This will be turquoise</div>
    <div css={[danger, base]}>
      This will be also be turquoise since the base styles
      overwrite the danger styles.
    </div>
    <div css={[base, danger]}>This will be red</div>
  </div>
    </div>
  )

}
