import React, { useEffect, useState } from 'react'
import Head from 'next/head'
import Image from 'next/image'
import logo from '../images/pokemon_logo.png'
import Link from 'next/link'
import {useTheme} from 'next-themes'
import {MoonIcon, SunIcon} from '@heroicons/react/solid'


export const getServerSideProps =async ()=>
{

    const eres  = await fetch(`https://pokeapi.co/api/v2/type/electric`)
    const etype = await eres.json()

    const nres  = await fetch(`https://pokeapi.co/api/v2/type/normal`)
    const ntype = await nres.json()
    
    const fres  = await fetch(`https://pokeapi.co/api/v2/type/fighting`)
    const ftype = await fres.json()
    
    return{
        props :{electric : etype, normal : ntype, fighting: ftype, }
    }
}

/** @param {import('next').InferGetServerSidePropsType<typeof getServerSideProps> } props */
export default function HeaderSec({electric, normal, fighting})
{
    const [pokemon,putPokemon] = useState([])
    const [query,setQuery] = useState('');
    const [active, setActive] = useState(false);
    const {systemTheme, theme, setTheme} = useTheme();
    const [mounted, setMounted] = useState(false)

    useEffect(() => { setMounted(true)}, [])

    const handleClick = () =>
    {
        setActive(!active);
    };

    //Dark Theme or Light Theme
    const renderThemeChanger = () =>
    {
	    if(!mounted) return null;

	    const currentTheme = theme === 'system' ? systemTheme : theme;

	    if(currentTheme === 'dark' )
	    {
		    return (
		    <SunIcon className="h-14 md:flex'
            px-3 py-2 font-bold  rounded-full lg:w-auto  hover:bg-blue-700 '" role="button" onClick=
		    {() => setTheme('light')}/> ) ;
	    }

	    else
	    {
		    return (
		    <MoonIcon className="h-14 md:flex '
            px-3 py-2 font-bold  rounded-3xl lg:w-auto  hover:bg-blue-700 '" role="button" onClick=
		    {() => setTheme('dark')}/>);
	    }
    }

    /*const searchPokemon = (e) =>{
        e.preventDefault();
        console.log('Searched for', query);
        fetch(`https://pokeapi.co/api/v2/pokemon/${query}`).then((resp)=>resp.json()).then(data=>{
            putPokemon(data);
            console.log(data);
        });
    };*/

    return (
        <div className="dark:bg-gray-700">

            <Head>
                <title>Pokedex API</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
                <link href="https://unpkg.com/tailwindcss@^1.0/dist/tailwind.min.css" rel="stylesheet"/>
                <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css"/>
                <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"/>
            </Head>

            <main>
                <nav className='flex flex-wrap items-center p-1 bg-blue-600 dark:bg-blue-400 '>

                    <Link href='/'>
                        <a className='inline-flex items-center p-2 ml-8 mr-4 '>
                            <Image src={logo} alt="Logo" className="" width="190" height="70"/>
                        </a>
                    </Link>

                    <button className='inline-flex p-3 ml-auto text-white rounded outline-none lg:hidden hover:bg-blue-700 hover:text-white' onClick={handleClick}>
                        <svg className='w-6 h-6' fill='none' stroke='currentColor' viewBox='0 0 24 24'
                        xmlns='http://www.w3.org/2000/svg'>
                            <path strokeLinecap='round' strokeLinejoin='round' strokeWidth={2}
                            d='M4 6h16M4 12h16M4 18h16'/>
                        </svg>
                    </button>

                    {/*Note that in this div we will use a ternary operator to decide whether or not to display the
                    content of the div  */}

                    <div className={`${active ? '' : 'hidden'}  w-full lg:inline-flex lg:flex-grow lg:w-auto`}>
                        <div className='flex flex-col items-start w-full lg:inline-flex lg:flex-row lg:ml-auto lg:w-auto lg:items-center lg:h-auto'>

                            <div className="items-center md:flex 'items-center justify-center w-full
                            px-3 py-2 font-bold rounded-3xl  0 lg:inline-flex lg:w-auto hover:bg-blue-700 '">

                                <input id="search_name" className="p-2 " style={{borderTopLeftRadius: 30,
                                    borderBottomLeftRadius: 30}}
                                    type="text"
                                    value={query}
                                    onChange={(e)=>{setQuery(e.currentTarget.value);}}
                                    placeholder="Enter Pokemon Name"/>

                                <input id="submit_button" style={{borderTopRightRadius: 30,
                                    borderBottomRightRadius: 30}}
                                    onClick={(e)=>{
                                    e.preventDefault();
                                    console.log("searched for "+query)
                                    fetch(`https://pokeapi.co/api/v2/pokemon/${query}`)
                                    .then((resp)=>resp.json())
                                    .then(data=>
                                    {
                                        putPokemon(data);
                                        console.log(data);
                                    });}}
                                    type="submit" value="Search" className="p-2 btn btn-light"/>
                            </div>

                            {renderThemeChanger()}

                            <div className="items-center md:flex 'items-center justify-center w-full
                            px-3 py-2 font-bold  rounded-3xl lg:inline-flex lg:w-auto hover:bg-blue-700 '">
                                <Link href='/pokemonnames'>
                                    <a className="p-2 bg-white rounded-full dark:bg-gray-900">Names</a>
                                </Link>
                            </div>

                            <div className="items-center md:flex 'items-center justify-center w-full
                            px-3 py-2 font-bold  rounded-3xl lg:w-auto  hover:bg-blue-700 '">
                                <Link href='/types/pokemontypes'>
                                    <a className="p-2 bg-white rounded-full dark:bg-gray-900 ">Types</a>
                                </Link>
                            </div>

                            {/*
                            <div
                                aria-label="Toggle Dark Mode"
                                type="button"
                                className="order-2 w-12 h-12 p-3 md:order-3"
                                onClick={() => setTheme(theme === 'dark' ? 'light' : 'dark')}>Dark
                            </div>*/}
                        </div>
                    </div>
                </nav>

                {pokemon?.name &&
                <div className="max-w-xs pt-6 mt-3 mb-4 ml-auto mr-auto bg-green-400 border-8 border-blue-600 shadow-lg rounded-2xl dark:bg-blue-600 dark:border-green-400">
                        {pokemon?.sprites && (

                            // eslint-disable-next-line @next/next/no-img-element
                            <img className="p-4 ml-auto mr-auto bg-white rounded-full " alt="image" src={pokemon.sprites.front_default}height="110" width="110"/>
                        )}

                        <div className="px-6 py-2 ">
                            <div className="p-1 mb-2 text-3xl font-bold text-center bg-white dark:text-black rounded-3xl ">{pokemon?.name.toUpperCase()}</div>

                            {pokemon?.types?.length > 0 && (
                                <p className="p-2 mb-1 bg-yellow-400 dark:bg-indigo-600 rounded-xl">
                                    <ul>
                                        <p className="text-xl font-bold">Type:</p>
                                        {
                                            pokemon.types.map((t) =>
                                            {
                                                // eslint-disable-next-line react/jsx-key
                                                return <li className="ml-16 text-lg font-semibold list-disc list-inside"> {t.type.name[0].toUpperCase()+ t.type.name.slice(1)}</li>
                                            })
                                        }
                                    </ul>
                                </p>
                            )}

                            {pokemon?.types?.length > 0 && (
                                <p className="p-2 my-2 text-base bg-red-500 rounded-lg dark:bg-purple-500">
                                <ul>
                                    <p className="text-xl font-bold">Abilities: </p>
                                    {
                                        pokemon.abilities.map((t) =>
                                        {
                                            // eslint-disable-next-line react/jsx-key
                                            return <li className="ml-16 text-xl font-semibold list-disc list-inside">{t.ability.name[0].toUpperCase()+ t.ability.name.slice(1)} </li>
                                        })
                                    }
                                </ul>
                                </p>
                            )}
                        </div>
                    </div>
                }

                {/*Electric Pokemon Showcase*/}
                <h1 className="mt-6 text-4xl dark:text-yellow-400 " style={{textAlign:"center"}} >
                    <b>ELECTRIC POKEMONS</b>
                </h1>
                <div className="mb-6 flex ml-1 mr-1 max-w-full overflow-y-auto space-x-10 bg-yellow-300 dark:bg-yellow-500 sm:w-100% scrollbar-hide rounded-3xl p-2 my-3">
                {
                electric.pokemon.map((name) =>
                {
                    return (
                    <div key={name}>
                        <Link href={`/pokemon/${name.pokemon.name}`}>
                            <a>
                                <div className="w-40 mt-2 mb-2 bg-blue-400 border-2 border-yellow-300 rounded-lg cardz">
                                    <img className="h-40 rounded-2xl" src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${name.pokemon.url.slice(34,-1)}.png`} />
                                        <div className="p-0.5 text-lg font-semibold bg-white dark:bg-black" style={{textAlign:"center"}}>
                                        {
                                            name.pokemon.name.toUpperCase()
                                        }
                                        </div>
                                </div>
                            </a>
                        </Link>
                    </div>)
                })
                }
                </div>

                {/*Normal Pokemon Showcase*/}
                <h1 className="my-3 text-4xl dark:text-yellow-400" style={{textAlign:"center"}} >
                    <b>NORMAL POKEMONS</b>
                </h1>
                <div className="flex ml-1 mr-1 max-w-full overflow-y-auto space-x-10 sm:w-100% scrollbar-hide bg-yellow-300 dark:bg-yellow-500 shadow-md rounded-3xl p-2 my-3">
                {
                normal.pokemon.map((name) =>
                {
                    return (
                    <div key={name}>
                        <Link href={`/pokemon/${name.pokemon.name}`}>
                            <a>
                                <div className="w-40 mt-2 mb-2 bg-blue-400 border-2 border-yellow-300 rounded-lg cardz">
                                    <img className="h-40 rounded-2xl" src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${name.pokemon.url.slice(34,-1)}.png`} />
                                        <div className="p-1 text-lg font-semibold bg-white dark:bg-black" style={{textAlign:"center"}}>
                                        {
                                            name.pokemon.name.toUpperCase()
                                        }
                                        </div>
                                </div>
                            </a>
                        </Link>
                    </div>)
                })}
                </div>

                {/*Flying Pokemon Showcase*/}
                <h1 className="my-3 text-4xl dark:text-yellow-400" style={{textAlign:"center"}} >
                    <b>FIGHTING POKEMONS</b>
                </h1>
                <div className="flex ml-1 mr-1 max-w-full overflow-y-auto space-x-10 sm:w-100% scrollbar-hide bg-yellow-300 dark:bg-yellow-500 shadow-md rounded-3xl p-2 my-3">
                {
                fighting.pokemon.map((name) =>
                {
                    return (
                    <div key={name}>
                        <Link href={`/pokemon/${name.pokemon.name}`}>
                            <a>
                                <div className="w-40 mt-2 mb-2 bg-blue-400 border-2 border-yellow-300 rounded-lg cardz">
                                    <img className="h-40 rounded-2xl" src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${name.pokemon.url.slice(34,-1)}.png`} />
                                        <div className="p-1 text-lg font-semibold bg-white dark:bg-black" style={{textAlign:"center"}}>
                                        {
                                            name.pokemon.name.toUpperCase()
                                        }
                                        </div>
                                </div>
                            </a>
                        </Link>
                    </div>)
                })}
                </div>
            </main>
        </div>
    )
}